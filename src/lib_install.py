# del modulo subprocess solo importamos la funcion getoutput
from subprocess import getoutput

from time import sleep
# importamos del modulo os la funcion chdir para cambiar entre carpetas
from os import chdir, getcwd

from .colors import COLOR

# importamos la funcion expanduser del modulo os.path
from os.path import expanduser

colores = COLOR()

def install_with_comand(comands):

    arch = 100/len(comands) # cantidad de comandos a ejecutar
    contador = 0 # porcentaje cargado
    cordenadas = [5, 10] # cordenada donde situar la barra de carga
    char = [1, 50] # barra de carga
    caracteres_carga = ["|", "=", ">", "%"]
    print(colores.POS(cordenadas[0]+contador, cordenadas[1]) + "\t\t\t      " + caracteres_carga[0])
    #

    """for arch in range(7, 108):
        sleep(0.01)
        print(colores.UP(1)+"\033["+str(arch)+"C"+colores.LIGHTYELLOW_EX+"=>")
        print(colores.UP(1)+colores.LIGHTWHITE_EX+str(arch-7)+"%")
    print(colores.UP(1)+"\033["+str(arch+1)+"C"+colores.LIGHTWHITE_EX+"]")
    print(colores.POS(25, 5) + colores.LIGHTGREEN_EX +'\t-------------------------------')"""

    for comando in comands:
        char[0] += arch-0.01

        #sleep(0.01)
        print("\t\t\t\t"+colores.UP(1)+"\033["+str(int(cordenadas[0]))+"C"+colores.LIGHTYELLOW_EX+caracteres_carga[1]*cordenadas[0]+caracteres_carga[2])
        print("\t\t\t\t"+colores.UP(1)+colores.LIGHTWHITE_EX+str(int(char[0]))+caracteres_carga[3])
        

        if comando.split(" ")[0] == "cd":
            """
                Eliminamos los espacios y comprobamos si se introdujo un comando cd, pues no se puede
                en python cambiar de directorio con comandos bash, necesitamos hacer uso de la funcion
                os.chdir() la cual nos permite cambiar de carpeta
                
                >>> comando = "cd /holamundo"
                >>> comando.split(" ")[0]      # eliminamos los espacios con split  comando.split(" ") = ["cd", "/holamundo"]
                'cd'
                >>> a = "cd /root a/aasd /" # una ruta random
                >>> a.split(" ")
                ['cd', '/ro ot', 'a/aasd', '/']
                >>> a.split("cd")                  # lo que queremos obtener, la ruta sin modificaciones 
                ['', ' /root a/aasd /']             # pero hay un espacio inicial que no deberia estar
                
            """
            if comando.split(" ")[1][0] == "~":
                # si la ruta es ~, obtenemos la hubicacion real de este directorio:
                ruta = expanduser( '~' )
            else:
                # eliminamos cd del comando, obtenemos una lista con un string vacio y la ruta con un espacio inial a eliminar
                ruta =  comando.split("cd")[1][1:].split("\n")[0]
            
            try:
                chdir(ruta)
            except OSError:
                #print("Error al moverse a la carpeta")
                pass
        
        # si comando no es una linea de caracter 0(hay algo escrito y no es simplemente un enter), ejecutar comando:
        elif len(comando.split("\n")) != 0:
            salida_comando = getoutput(comando)   

        cordenadas[0] += 1
        
        
    print("\t\t\t\t"+colores.UP(1)+"\033["+str(int(cordenadas[0])+19)+"C"+colores.LIGHTWHITE_EX+"]")  
        


def install_from_file(file_name):
    """
        Esta funcion ejecuta comandos bash de un archivo .sh desde codigo python
    """

    # obtenemos la ruta actual antes de cambiarla, para poder volver
    ruta_actual = getcwd()

    # agragamos la ruta donde estan los archivos de instalacion
    file_name = "./src/"+file_name
    
    # Abrimos el archivo en modo lectura:
    file = open(file_name, "r")

    for comando in file.readlines():
        # Eliminamos los saltos de lineas (\n):
        
        if comando.split(" ")[0] == "cd":
            """
                Eliminamos los espacios y comprobamos si se introdujo un comando cd, pues no se puede
                en python cambiar de directorio con comandos bash, necesitamos hacer uso de la funcion
                os.chdir() la cual nos permite cambiar de carpeta
                
                >>> comando = "cd /holamundo"
                >>> comando.split(" ")[0]      # eliminamos los espacios con split  comando.split(" ") = ["cd", "/holamundo"]
                'cd'
                
                >>> a = "cd /root a/aasd /" # una ruta random
                >>> a.split(" ")
                ['cd', '/ro ot', 'a/aasd', '/']
                >>> a.split("cd")                  # lo que queremos obtener, la ruta sin modificaciones 
                ['', ' /root a/aasd /']             # pero hay un espacio inicial que no deberia estar

            """
            if comando.split(" ")[1][0] == "~":
                # si la ruta es ~, obtenemos la hubicacion real de este directorio:
                ruta = expanduser( '~' )
            else:
                # eliminamos cd del comando, obtenemos una lista con un string vacio y la ruta con un espacio inial a eliminar
                ruta =  comando.split("cd")[1][1:].split("\n")[0]
                
            chdir(ruta)
        
        # si comando no es una linea de caracter 0(hay algo escrito y no es simplemente un enter), ejecutar comando:
        elif len(comando.split("\n")) != 0:
            # eliminamos los saltos de linea antes de ejecutar el comando
            print(comando)
            salida_comando = getoutput(comando)   
    # entramos a la carpeta donde esta el script de instalacion si es que se cambio de carpetas en el proceso de instalacion
    chdir(ruta_actual)
    file.close()