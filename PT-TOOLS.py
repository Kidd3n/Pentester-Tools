# Modulos para diversas funciones:
from sys import exit
from time import sleep
from subprocess import getoutput
from getpass import _raw_input

# Modulos(librerias de instalacion):
from src.Kali import Kali
from src.DebianPT import DebianPT
from src.BasicTools import BasicTools

# Modulo para colores de la shell:
from src.Colors.colors import COLOR

def ejecutar_opcion(opcion, opciones):
    opciones[opcion][1]()


def mostrar_menu(opciones, opcion_salida):
    opcion = None
    while opcion != opcion_salida:
        mostrar_menu(opciones)
        opcion = leer_opcion(opciones)
        ejecutar_opcion(opcion, opciones)
        print()




def salir():
    print("")
    print(colores.POINTGREEN('Saliendo...'))
    # Funcion para salir:
    exit(0)


if __name__ == '__main__':
    
    colores = COLOR()
    
    # Creamos un bucle infinito:
    while True:
    
        try:
    
            # limpiamos la pantalla como hace el comando clear:
            print(colores.CLEAR())
            print(getoutput("toilet -f term -F border:metal Pentester-Tool by kidd3n"))
            
            opciones = {
                1: ('Kali (Se actualizara y descargara herramientas adicionales de pentesting)', Kali),
                2: ('Todas las herramientas de Pentesting', DebianPT),
                3: ('Descarga Herramientas utiles para un usuario normal como LibreOffice, Chrome, etc.', BasicTools),
                4: ('Salir', salir)
            }

            for key in opciones.keys():
                # mostart el menu de opciones:
                print("{}{}{}){} {}".format(colores.LIGHTGREEN_EX, key, colores.LIGHTWHITE_EX, colores.LIGHTYELLOW_EX , opciones[key][0]))

            try:
                opcion_escogida = int(_raw_input("Opcion: "))
            except ValueError:
                # si se introdujo algo diferente a un numero mostramos este mensaje de error:
                print(colores.POINTRED("Esta no es una opcion valida."))
                sleep(1)
                continue
            
            # si cantidad_de_opciones
            cantidad_de_opciones = 0
            for key in opciones.keys():
                if key == opcion_escogida:
                    # Cuando encontramos la opcione que queremos, la ejecutamos
                    opciones[key][1]()
                else:
                    cantidad_de_opciones += 1
                
                if cantidad_de_opciones == len(opciones.keys()):
                    print(colores.POINTRED("Esta opcion no esta dentro del menu."))
            sleep(1)

        except KeyboardInterrupt:
            # si se hizo un Ctrl + c salimos del progranma:
            salir()
